#   - name: nvm (ensure .nvm folder exists)$
#     file: "path={{ ansible_env.HOME }}/.nvm state=directory"$
#- hosts: localhost$
#  vars:$
#    dotfiles_location: "{{ ansible_env.HOME }}/dotfiles"$
#  tasks:$
#  - name: vim install -> plugin vim-go install$
#    git:$
#      repo: https://github.com/fatih/vim-go.git$
#      dest: ~/.vim/pack/plugins/start/vim-go$
#  - name: vim install -> plugin vim-go initiate$
#    shell: vim -E -s -c "GoInstallBinaries" -c qa
#
---
- hosts: all
  vars:
    dotfiles_location: "{{ ansible_env.HOME }}/dotfiles"

  tasks:
  - name: installation from package manager (latest)
    become: yes
    ignore_errors: yes
    package:
      name: "{{ item }}"
      state: latest
    with_items:
      - curl
      - git
      - vim
      - wget
      - zsh

  - name: "vim: VimCompletesMe"
    git:
      repo: git://github.com/ajh17/VimCompletesMe.git
      dest: ~/.vim/pack/vendor/start/VimCompletesMe

  - block:
    - name: save dotfiles location to register
      stat:
        path: "{{ dotfiles_location }}"
      register: dotfile_location
    - name: make symlinks to dotfiles
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      loop:
        - { src: "{{ dotfiles_location }}/.aliases", dest: "{{ ansible_env.HOME }}/.aliases"}
        - { src: "{{ dotfiles_location }}/.tmux.conf", dest: "{{ ansible_env.HOME }}/.tmux.conf"}
        - { src: "{{ dotfiles_location }}/.zshrc", dest: "{{ ansible_env.HOME }}/.zshrc"}
        - { src: "{{ dotfiles_location }}/.vim", dest: "{{ ansible_env.HOME }}/.vim"}
        - { src: "{{ dotfiles_location }}/.vimrc", dest: "{{ ansible_env.HOME }}/.vimrc"}
      when: dotfile_location.stat.exists

  - block:
    - name: "nvm installation part 1: git clone"
      git:
        repo: https://github.com/nvm-sh/nvm.git
        dest: "{{ ansible_env.HOME }}/.nvm"
    - name: "nvm installation part 2: source nvm.sh and install node stable"
      shell: |
        . {{ ansible_env.HOME }}/.nvm/nvm.sh
        nvm install node
        nvm use node
      args:
        creates: "{{ ansible_env.HOME }}/.nvm/versions/node"
