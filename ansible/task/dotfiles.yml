- stat:
    path: "{{ ansible_env.HOME }}/Git/dotfiles"
  register: dotfiles_dir

- name: git clone tkiatd/dotfiles (ssh)
  git:
    repo: git@github.com:tkiatd/dotfiles.git
    dest: "{{ ansible_env.HOME }}/Git/dotfiles"
  ignore_errors: yes
  register: git_ssh_clone_result
  when: dotfiles_dir.stat.exists == false

- name: git clone tkiatd/dotfiles (http, fallback)
  git:
    repo: https://github.com/tkiatd/dotfiles.git
    dest: "{{ ansible_env.HOME }}/Git/dotfiles"
  when: dotfiles_dir.stat.exists == false and git_ssh_clone_result.failed == true

- name: make symlinks to dotfiles
  vars:
    dotfiles_location: "{{ ansible_env.HOME }}/Git/dotfiles"
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop:
    - { src: "{{ dotfiles_location }}/.ssh/config", dest: "{{ ansible_env.HOME }}/.ssh/config"}
    - { src: "{{ dotfiles_location }}/.tmux.conf", dest: "{{ ansible_env.HOME }}/.tmux.conf"}
    - { src: "{{ dotfiles_location }}/.vimrc", dest: "{{ ansible_env.HOME }}/.vimrc"}
    - { src: "{{ dotfiles_location }}/.vim/colors", dest: "{{ ansible_env.HOME }}/.vim/colors"}
    - { src: "{{ dotfiles_location }}/.vim/template", dest: "{{ ansible_env.HOME }}/.vim/template"}
    - { src: "{{ dotfiles_location }}/.zshrc", dest: "{{ ansible_env.HOME }}/.zshrc"}
    - { src: "{{ dotfiles_location }}/.zshrc.aliases", dest: "{{ ansible_env.HOME }}/.zshrc.aliases"}
  when: dotfiles_location is defined

- name: dotfiles -> create ~/.zshrc.program if not exist
  file:
    path: ~/.zshrc.program
    state: file
